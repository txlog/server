name: Build and Scan Docker Image
on:
  push:
    branches:
      - "*"
    tags:
      - 'v*'

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
      actions: read
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.0'

    - name: Compile
      run: CGO_ENABLED=0 GOOS="linux" GOARCH="amd64" go build -trimpath -buildvcs=false -ldflags "-s -w" -o bin/txlog-server

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}

    - uses: anchore/scan-action@7c05671ae9be166aeb155bad2d7df9121823df32 # v6
      id: scan
      with:
        image: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}
        fail-build: false
    - name: upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}

    - name: Clean untagged images
      uses: quartx-analytics/ghcr-cleaner@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        owner-type: org
        token: ${{ secrets.CLEANUP_TOKEN }}
        repository-owner: ${{ github.repository_owner }}
        package-name: ${{ github.event.repository.name }}
        delete-untagged: true
        keep-at-most: 0
        skip-tags: v*
